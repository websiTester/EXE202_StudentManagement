// <auto-generated />
using System;
using EXE202_StudentManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EXE202_StudentManagement.Migrations
{
    [DbContext(typeof(Exe202Context))]
    [Migration("20250922064009_Ver6")]
    partial class Ver6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EXE202_StudentManagement.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime")
                        .HasColumnName("deadline");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsGroupAssignment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isGroupAssignment");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Assignme__3213E83FF33EBC35");

                    b.HasIndex("ClassId");

                    b.ToTable("Assignment", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.AssignmentGrade", b =>
                {
                    b.Property<int>("AssignmentGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentGradeId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Grade")
                        .HasColumnType("real");

                    b.Property<DateTime?>("GradedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeacherId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AssignmentGradeId");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("AssignmentGrades");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.AssignmentSubmission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("submission_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int")
                        .HasColumnName("assignment_id");

                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("student_id");

                    b.Property<string>("SubmitLink")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("submit_link");

                    b.Property<DateTime?>("SubmittedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("submitted_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TeacherComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("teacher_comment");

                    b.Property<decimal?>("TeacherGrade")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("teacher_grade");

                    b.HasKey("SubmissionId")
                        .HasName("PK__Assignme__9B535595AC48F836");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Assignment_Submission", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("class_name");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TeacherId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClassId")
                        .HasName("PK__Class__FDF479862575CE96");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("create_by");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Course__3213E83FD9A18690");

                    b.HasIndex("CreateBy");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<string>("GroupName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("group_name");

                    b.Property<string>("LeaderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GroupId")
                        .HasName("PK__Group__D57795A04383A0C3");

                    b.HasIndex("ClassId");

                    b.HasIndex("LeaderId");

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.GroupTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("task_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("assigned_to");

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int")
                        .HasColumnName("assignment_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("TaskId")
                        .HasName("PK__Group_Ta__0492148D9EC75A99");

                    b.HasIndex("AssignedTo");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("GroupId");

                    b.ToTable("Group_Task", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("material_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int")
                        .HasColumnName("assignment_id");

                    b.Property<string>("FileLink")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("file_link");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("uploaded_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MaterialId")
                        .HasName("PK__Material__6BFE1D2822950899");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__E059842FBC5861B6");

                    b.HasIndex("ClassId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.PeerReview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int")
                        .HasColumnName("assignment_id");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<string>("RevieweeId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("reviewee_id");

                    b.Property<string>("ReviewerId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("reviewer_id");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("score");

                    b.HasKey("ReviewId")
                        .HasName("PK__Peer_Rev__60883D90687E92E6");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("GroupId");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Peer_Review", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("PK__Student___3213E83F8BBF8607");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("Student_Class", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.StudentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("PK__Student___3213E83FC840530E");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("Student_Group", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Assignment", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Class", "Class")
                        .WithMany("Assignments")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Assignmen__class__68487DD7");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.AssignmentGrade", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Assignment", "Assignment")
                        .WithMany("AssignmentGrades")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("EXE202_StudentManagement.Models.User", "Student")
                        .WithMany("StudentGrades")
                        .HasForeignKey("StudentId");

                    b.HasOne("EXE202_StudentManagement.Models.User", "Teacher")
                        .WithMany("TeacherGrades")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Assignment");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.AssignmentSubmission", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Assignment", "Assignment")
                        .WithMany("AssignmentSubmissions")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK__Assignmen__assig__76969D2E");

                    b.HasOne("EXE202_StudentManagement.Models.User", "Student")
                        .WithMany("AssignmentSubmissions")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Assignmen__stude__778AC167");

                    b.Navigation("Assignment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Class", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Class_Cou__cours__5812160E");

                    b.HasOne("EXE202_StudentManagement.Models.User", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Class_Cou__teach__59063A47");

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Course", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.User", "CreateByNavigation")
                        .WithMany("Courses")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK__Course__create_b__5165187F");

                    b.Navigation("CreateByNavigation");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Group", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Class", "Class")
                        .WithMany("Groups")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Group__class_cou__5FB337D6");

                    b.HasOne("EXE202_StudentManagement.Models.User", "Leader")
                        .WithMany("Groups")
                        .HasForeignKey("LeaderId");

                    b.Navigation("Class");

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.GroupTask", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.User", "AssignedToNavigation")
                        .WithMany("GroupTasks")
                        .HasForeignKey("AssignedTo")
                        .HasConstraintName("FK__Group_Tas__assig__72C60C4A");

                    b.HasOne("EXE202_StudentManagement.Models.Assignment", "Assignment")
                        .WithMany("GroupTasks")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK__Group_Tas__assig__70DDC3D8");

                    b.HasOne("EXE202_StudentManagement.Models.Group", "Group")
                        .WithMany("GroupTasks")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__Group_Tas__group__71D1E811");

                    b.Navigation("AssignedToNavigation");

                    b.Navigation("Assignment");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Material", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Assignment", "Assignment")
                        .WithMany("Materials")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK__Materials__assig__6C190EBB");

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Notification", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Class", "Class")
                        .WithMany("Notifications")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Notificat__class__02084FDA");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.PeerReview", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Assignment", "Assignment")
                        .WithMany("PeerReviews")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK__Peer_Revi__assig__7C4F7684");

                    b.HasOne("EXE202_StudentManagement.Models.Group", "Group")
                        .WithMany("PeerReviews")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__Peer_Revi__group__7B5B524B");

                    b.HasOne("EXE202_StudentManagement.Models.User", "Reviewee")
                        .WithMany("PeerReviewReviewees")
                        .HasForeignKey("RevieweeId")
                        .HasConstraintName("FK__Peer_Revi__revie__7E37BEF6");

                    b.HasOne("EXE202_StudentManagement.Models.User", "Reviewer")
                        .WithMany("PeerReviewReviewers")
                        .HasForeignKey("ReviewerId")
                        .HasConstraintName("FK__Peer_Revi__revie__7D439ABD");

                    b.Navigation("Assignment");

                    b.Navigation("Group");

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.StudentClass", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Class", "Class")
                        .WithMany("StudentClasses")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Student_C__class__5CD6CB2B");

                    b.HasOne("EXE202_StudentManagement.Models.User", "Student")
                        .WithMany("StudentClasses")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Student_C__stude__5BE2A6F2");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.StudentGroup", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.Group", "Group")
                        .WithMany("StudentGroups")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__Student_G__group__628FA481");

                    b.HasOne("EXE202_StudentManagement.Models.User", "Student")
                        .WithMany("StudentGroups")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Student_G__stude__6383C8BA");

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EXE202_StudentManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EXE202_StudentManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Assignment", b =>
                {
                    b.Navigation("AssignmentGrades");

                    b.Navigation("AssignmentSubmissions");

                    b.Navigation("GroupTasks");

                    b.Navigation("Materials");

                    b.Navigation("PeerReviews");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Class", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Groups");

                    b.Navigation("Notifications");

                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Course", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.Group", b =>
                {
                    b.Navigation("GroupTasks");

                    b.Navigation("PeerReviews");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("EXE202_StudentManagement.Models.User", b =>
                {
                    b.Navigation("AssignmentSubmissions");

                    b.Navigation("Classes");

                    b.Navigation("Courses");

                    b.Navigation("GroupTasks");

                    b.Navigation("Groups");

                    b.Navigation("PeerReviewReviewees");

                    b.Navigation("PeerReviewReviewers");

                    b.Navigation("StudentClasses");

                    b.Navigation("StudentGrades");

                    b.Navigation("StudentGroups");

                    b.Navigation("TeacherGrades");
                });
#pragma warning restore 612, 618
        }
    }
}
