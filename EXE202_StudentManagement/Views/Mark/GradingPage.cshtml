@model GradingViewModel
@{
    Layout = "_TeacherLayout";
    ViewData["Title"] = "Chấm điểm: " + Model.AssignmentName;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <!-- Tải Tailwind CSS cho giao diện -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Tải Font Awesome cho icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Thêm font Inter -->
    <style>
        body { font-family: 'Inter', sans-serif; }
        .modal { transition: opacity 0.25s ease; }
        .modal-content { transition: transform 0.25s ease; }
    </style>
</head>
<body class="bg-gray-50 text-gray-800">
    <div class="bg-gray-50 min-h-screen p-4 sm:p-6 lg:p-8">
        <div class="max-w-7xl mx-auto">

            <!-- Header của trang -->
            <div class="mb-6">
                <a asp-controller="Mark"
                asp-action="AssignmentList"
                asp-route-classId="@Model.classId"
                class="text-indigo-600 hover:text-indigo-800 transition duration-150 ease-in-out text-sm">
                    <i class="fas fa-arrow-left mr-2"></i>Quay lại danh sách
                </a>
                <h1 class="text-3xl font-bold text-gray-900 mt-2">Chấm điểm: @Model.AssignmentName</h1>
                <p class="text-lg text-gray-600">Nhóm: <span class="font-semibold">@Model.GroupName</span></p>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6 rounded-md shadow-sm" role="alert">
                    <p class="font-bold">Thành công</p>
                    <p>@TempData["SuccessMessage"]</p>
                </div>
            }

            <div class="lg:grid lg:grid-cols-3 lg:gap-8">
                <!-- CỘT BÊN TRÁI: TÀI LIỆU NỘP VÀ ĐÁNH GIÁ CHUNG -->
                <div class="lg:col-span-1 space-y-6">
                    <!-- Khu vực file đã nộp -->
                    <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-200">
                        <h2 class="text-xl font-bold text-gray-800 mb-4">Tài liệu đã nộp</h2>
                        @if (!string.IsNullOrEmpty(Model.SubmissionLink))
                        {
                            <div class="flex items-center p-3 bg-gray-50 rounded-lg">
                                <i class="fas fa-file-archive text-2xl text-gray-500"></i>
                                <span class="ml-3 font-medium text-gray-700 truncate">@Model.SubmissionLink</span>
                            </div>

                            @if (Model.SubmissionLink.EndsWith(".zip", StringComparison.OrdinalIgnoreCase)
                        || Model.SubmissionLink.EndsWith(".rar", StringComparison.OrdinalIgnoreCase))
                            {
                                <!-- Nếu là file nộp (.zip / .rar) thì download -->
                                <a asp-action="DownloadFile" asp-controller="Mark"
                                asp-route-assignmentId="@Model.AssignmentId" asp-route-groupId="@Model.GroupId" target="_blank" 
                                class="mt-4 w-full inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                    <i class="fas fa-download mr-2"></i>
                                    Tải file
                                </a>
                            }
                            else
                            {
                                <!-- Nếu là link thì mở ngoài -->
                                <a href="@Model.SubmissionLink" target="_blank"
                                class="mt-4 w-full inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                    <i class="fas fa-external-link-alt mr-2"></i>
                                    Mở liên kết
                                </a>
                            }
                        }
                        else
                        {
                            <p class="text-center text-gray-500 py-4">Nhóm chưa nộp bài.</p>
                        }
                    </div>

                    <!-- Khu vực đánh giá chung -->
                    <form asp-controller="Mark" asp-action="SaveGroupGrade" method="post">

                        <input type="hidden" asp-for="AssignmentId" />
                        <input type="hidden" asp-for="GroupId" />
                        <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-200">
                            <h2 class="text-xl font-bold text-gray-800 mb-4">Đánh giá chung</h2>
                            <div class="space-y-4">
                                <div>
                                    <label asp-for="GroupGrade" class="block text-sm font-medium text-gray-700 mb-1">Điểm tổng</label>
                                    <input asp-for="GroupGrade" type="number" step="0.1" class="form-input w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" placeholder="VD: 8.5" />
                                </div>
                                <div>
                                    <label asp-for="GroupComment" class="block text-sm font-medium text-gray-700 mb-1">Nhận xét chung</label>
                                    <textarea asp-for="GroupComment" class="form-textarea w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" rows="4" placeholder="Nhận xét về bài làm, sự phối hợp của cả nhóm..."></textarea>
                                </div>
                            </div>
                            @if (Model.SubmissionLink != null)
                            {
                                <div class="mt-6">
                                    <button type="submit" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        Lưu đánh giá nhóm
                                    </button>
                                </div>
                            }
                        </div>
                    </form>
                </div>



                <!-- CỘT BÊN PHẢI: ĐÁNH GIÁ THÀNH VIÊN -->
                <div class="lg:col-span-2 mt-6 lg:mt-0">
                    <form asp-controller="Mark" asp-action="SaveMemberGrades" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="AssignmentId" />
                        <input type="hidden" asp-for="GroupId" />
                        <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-200">
                            <h2 class="text-xl font-bold text-gray-800 mb-4">Đánh giá thành viên</h2>
                            <div class="space-y-6 max-h-[70vh] overflow-y-auto pr-2">
                                @for (var i = 0; i < Model.Members.Count; i++)
                                {
                                    <input type="hidden" asp-for="Members[i].StudentId" />
                                    var member = Model.Members[i];
                                    var todoTasks = member.Tasks.Where(t => t.Status == "todo").ToList();
                                    var doingTasks = member.Tasks.Where(t => t.Status == "doing").ToList();
                                    var doneTasks = member.Tasks.Where(t => t.Status == "done").ToList();

                                    <div class="border-t border-gray-200 pt-6">
                                        <div class="flex items-center justify-between">
                                            <div class="flex items-center gap-3">
                                                <h3 class="text-lg font-bold text-gray-900">@member.FullName</h3>
                                                @if(member.IsLeader)
                                                {
                                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                                        <i class="fas fa-star mr-1.5"></i>Trưởng nhóm
                                                    </span>
                                                }
                                            </div>
                                        </div>
                                        <div class="mt-4 flex flex-col md:flex-row md:items-start gap-4">
                                            <div class="flex-shrink-0">
                                                <label asp-for="Members[i].Grade" class="block text-sm font-medium text-gray-700 mb-1">Điểm</label>
                                                <input asp-for="Members[i].Grade" type="number" step="0.1" class="form-input w-full md:w-32 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" placeholder="Điểm TV" />
                                            </div>
                                            <div class="flex-grow">
                                                <label asp-for="Members[i].Comment" class="block text-sm font-medium text-gray-700 mb-1">Nhận xét cá nhân</label>
                                                <textarea asp-for="Members[i].Comment" class="form-textarea w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" rows="2" placeholder="Nhận xét về sự đóng góp của thành viên này..."></textarea>
                                            </div>
                                        </div>
                                        <div class="mt-6">
                                            <h4 class="text-md font-semibold text-gray-700">Tiến độ công việc</h4>
                                            <div class="mt-2 flex items-center gap-6 text-sm">
                                                <span class="text-red-600">Cần làm: <strong>@todoTasks.Count</strong></span>
                                                <span class="text-blue-600">Đang làm: <strong>@doingTasks.Count</strong></span>
                                                <span class="text-green-600">Hoàn thành: <strong>@doneTasks.Count</strong></span>
                                                <button type="button" onclick="toggleModal('modal-@member.StudentId')" class="ml-auto text-sm font-medium text-indigo-600 hover:text-indigo-500">
                                                    Xem chi tiết
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            @if (Model.SubmissionLink != null)
                            {
                                <div class="pt-6 mt-6 border-t border-gray-200">
                                    <div class="flex justify-end">
                                        <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                            Lưu đánh giá thành viên
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </form>
                </div>
            </div>

            <!-- Modals - Sẽ được tạo động cho mỗi thành viên -->
            @foreach (var member in Model.Members)
            {
                var todoTasks = member.Tasks.Where(t => t.Status == "todo").ToList();
                var doingTasks = member.Tasks.Where(t => t.Status == "doing").ToList();
                var doneTasks = member.Tasks.Where(t => t.Status == "done").ToList();

                <div id="modal-@member.StudentId" class="modal fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center p-4 hidden opacity-0" onclick="if (event.target.id === 'modal-@member.StudentId') toggleModal('modal-@member.StudentId')">
                    <div class="modal-content bg-white rounded-xl shadow-xl w-full max-w-2xl transform scale-95">
                        <div class="p-6">
                            <div class="flex justify-between items-center mb-4">
                                <h3 class="text-xl font-bold text-gray-800">Chi tiết công việc: @member.FullName</h3>
                                <button type="button" onclick="toggleModal('modal-@member.StudentId')" class="text-gray-400 hover:text-gray-600"><i class="fas fa-times text-xl"></i></button>
                            </div>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 max-h-[60vh] overflow-y-auto p-1">
                                <div>
                                    <h4 class="font-semibold text-red-600 mb-2 p-2 bg-red-50 rounded-md">Cần làm (@todoTasks.Count)</h4>
                                    <div class="space-y-2">
                                        @foreach(var task in todoTasks)
                                        {
                                            <div class="bg-gray-100 p-3 rounded-md text-sm"><p class="font-medium text-gray-800">@task.Title</p><p class="text-gray-500">Point: @task.Points</p></div>
                                        }
                                    </div>
                                </div>
                                <div>
                                    <h4 class="font-semibold text-blue-600 mb-2 p-2 bg-blue-50 rounded-md">Đang làm (@doingTasks.Count)</h4>
                                    <div class="space-y-2">
                                        @foreach(var task in doingTasks)
                                        {
                                            <div class="bg-gray-100 p-3 rounded-md text-sm"><p class="font-medium text-gray-800">@task.Title</p><p class="text-gray-500">Point: @task.Points</p></div>
                                        }
                                    </div>
                                </div>
                                <div>
                                    <h4 class="font-semibold text-green-600 mb-2 p-2 bg-green-50 rounded-md">Hoàn thành (@doneTasks.Count)</h4>
                                    <div class="space-y-2">
                                        @foreach(var task in doneTasks)
                                        {
                                            <div class="bg-gray-100 p-3 rounded-md text-sm"><p class="font-medium text-gray-800">@task.Title</p><p class="text-gray-500">Point: @task.Points</p></div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <script>
        function toggleModal(modalID) {
            const modal = document.getElementById(modalID);
            const modalContent = modal.querySelector('.modal-content');
            if (modal.classList.contains('hidden')) {
                modal.classList.remove('hidden');
                setTimeout(() => {
                    modal.classList.remove('opacity-0');
                    modalContent.classList.remove('scale-95');
                }, 10);
            } else {
                modal.classList.add('opacity-0');
                modalContent.classList.add('scale-95');
                setTimeout(() => {
                    modal.classList.add('hidden');
                }, 250);
            }
        }
    </script>
</body>
</html>

