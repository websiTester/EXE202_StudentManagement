@model List<AssigmentViewModel>
@{
    Layout = "_TeacherLayout";
    ViewData["Title"] = "Danh sách bài tập";
}


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(90deg, #e0e7ff, #c7d2fe, #a5b4fc);
            min-height: 100vh;
        }

        .dropdown-content {
            transition: all 0.3s ease-in-out;
            max-height: 0;
            overflow: hidden;
        }

            .dropdown-content.show {
                max-height: 1000px; /* Tăng giá trị để chứa được nhiều nhóm hơn */
            }
    </style>


    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8 flex-grow">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-3xl font-bold text-gray-800">Danh sách bài tập đã giao</h2>
            <button class="bg-indigo-500 hover:bg-indigo-600 text-white font-bold py-2 px-4 rounded-lg transition duration-200 flex items-center space-x-2">
                <i class="fas fa-plus"></i>
                <span>Giao bài tập mới</span>
            </button>
        </div>

        <div id="assignment-list-container" class="space-y-4">
            @if (Model != null && Model.Any())
            {
                @foreach (var assignment in Model)
                {
                    <div class="bg-white rounded-xl shadow-lg p-6">
                        <div class="flex flex-col md:flex-row justify-between items-start md:items-center">
                            <div>
                                <h3 class="text-xl font-bold text-gray-800">@assignment.Title</h3>
                                <p class="text-sm text-gray-500 mt-1">Hạn nộp: @assignment.DueDate</p>
                            </div>
                            <div class="flex items-center space-x-4 mt-4 md:mt-0">
                                <p class="text-sm font-medium text-gray-600">Đã nộp: <span class="text-indigo-600 font-bold">@assignment.SubmittedCount/@assignment.TotalCount</span></p>
                                <button class="toggle-dropdown-btn bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold py-2 px-4 rounded-lg text-sm" data-target="assignment-@assignment.Id-groups">
                                    Xem danh sách nhóm
                                </button>
                            </div>
                        </div>
                        <div id="assignment-@assignment.Id-groups" class="dropdown-content mt-4 pt-4 border-t border-gray-200">
                            <ul class="space-y-2">
                                @foreach (var group in assignment.Groups)
                                {
                                    <li class="flex justify-between items-center p-3 rounded-lg hover:bg-gray-50">
                                    <a href="/mark/grading/@assignment.Id/@group.Id" class="font-medium text-indigo-700 hover:underline">@group.Name</a>
                                        @if (group.Submitted)
                                        {
                                            <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-green-600 bg-green-200">Đã nộp</span>
                                        }
                                        else
                                        {
                                            <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-red-600 bg-red-200">Chưa nộp</span>
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-center text-gray-500">Chưa có bài tập nào được giao.</p>
            }
        </div>
    </main>

    

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const container = document.getElementById('assignment-list-container');
            if (!container) return;

            // Event delegation cho tất cả các nút dropdown
            container.addEventListener('click', (event) => {
                const button = event.target.closest('.toggle-dropdown-btn');
                if (button) {
                    const targetId = button.dataset.target;
                    const dropdown = document.getElementById(targetId);
                    if (dropdown) {
                        const isShown = dropdown.classList.toggle('show');
                        button.textContent = isShown ? 'Ẩn danh sách nhóm' : 'Xem danh sách nhóm';
                    }
                }
            });
        });
    </script>

